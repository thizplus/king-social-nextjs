/* src/components/globals/TipTapEditor.css */

.ProseMirror {
    outline: none;
    min-block-size: 150px; /* กำหนดความสูงขั้นต่ำเพื่อให้มีพื้นที่สำหรับแก้ไข */
    color: hsl(var(--foreground));
  }
  
  .ProseMirror p {
    margin-block: 1em;
    margin-inline: 0;
  }
  
  .ProseMirror h1,
  .ProseMirror h2,
  .ProseMirror h3,
  .ProseMirror h4,
  .ProseMirror h5,
  .ProseMirror h6 {
    line-height: 1.75;
    margin-block: 1.5em 0.5em;
    color: hsl(var(--foreground));
  }
  
  .ProseMirror h1 {
    font-size: 1.8em;
  }
  
  .ProseMirror h2 {
    font-size: 1.6em;
  }
  
  .ProseMirror h3 {
    font-size: 1.4em;
  }
  
  /* Enhanced Image Styles with data-alignment support */
  .ProseMirror img {
    max-inline-size: 100%;
    block-size: auto;
    display: block;
    margin-block: 1em;
    margin-inline: 0;
    transition: all 0.3s ease;
  }
  
  .ProseMirror img.responsive {
    max-width: 100%;
    height: auto;
  }
  
  /* Data alignment attributes - สำคัญมาก! */
  .ProseMirror img[data-alignment="left"] {
    margin-left: 0 !important;
    margin-right: auto !important;
  }
  
  .ProseMirror img[data-alignment="center"] {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  
  .ProseMirror img[data-alignment="right"] {
    margin-left: auto !important;
    margin-right: 0 !important;
  }
  
  /* Data float attributes */
  .ProseMirror img[data-float="left"] {
    float: left !important;
    margin: 0 16px 16px 0 !important;
  }
  
  .ProseMirror img[data-float="right"] {
    float: right !important;
    margin: 0 0 16px 16px !important;
  }
  
  .ProseMirror img[data-float="none"] {
    float: none !important;
    clear: both;
  }
  
  /* Image Container Styles - Updated for actual generated classes */
  .ProseMirror .image-container {
    margin: 16px 0;
    clear: both;
  }
  
  /* Text alignment based on actual classes generated by ImageNodeView */
  .ProseMirror .image-container.text-left img {
    margin-left: 0 !important;
    margin-right: auto !important;
  }
  
  .ProseMirror .image-container.text-center img {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  
  .ProseMirror .image-container.text-right img {
    margin-left: auto !important;
    margin-right: 0 !important;
  }
  
  /* Float support for containers */
  .ProseMirror .image-container.float-left {
    float: left;
    margin: 0 16px 16px 0;
  }
  
  .ProseMirror .image-container.float-right {
    float: right;
    margin: 0 0 16px 16px;
  }
  
  /* Image Alignment Classes */
  .ProseMirror .image-left {
    text-align: left;
  }
  
  .ProseMirror .image-center {
    text-align: center;
  }
  
  .ProseMirror .image-right {
    text-align: right;
  }
  
  /* Figure Styles for Images with Captions */
  .ProseMirror .image-figure {
    margin: 16px 0;
    display: inline-block;
  }
  
  .ProseMirror .image-figure img {
    margin: 0;
    display: block;
  }
  
  .ProseMirror .image-caption {
    font-size: 0.875rem;
    color: hsl(var(--muted-foreground));
    margin-top: 8px;
    font-style: italic;
    text-align: center;
    line-height: 1.4;
  }
  
  /* Clear floats after floating images */
  .ProseMirror img[data-float="left"] + *,
  .ProseMirror img[data-float="right"] + *,
  .ProseMirror .image-figure[style*="float"] + * {
    clear: none;
  }
  
  /* Image Border and Shadow Styles */
  .ProseMirror img[data-border="true"] {
    border: 2px solid hsl(var(--border));
  }
  
  .ProseMirror img[data-shadow="true"] {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  
  /* Dark mode shadow adjustment */
  .dark .ProseMirror img[data-shadow="true"] {
    box-shadow: 0 4px 6px rgba(255, 255, 255, 0.1);
  }
  
  /* Image Selection Styles */
  .ProseMirror img.ProseMirror-selectednode {
    outline: 2px solid hsl(var(--primary));
    border-radius: calc(var(--radius) - 2px);
  }
  
  /* Hover Effects for Images */
  .ProseMirror img:hover {
    cursor: pointer;
  }
  
  .ProseMirror img[data-shadow="true"]:hover {
    box-shadow: 0 8px 12px rgba(0, 0, 0, 0.15);
  }
  
  .dark .ProseMirror img[data-shadow="true"]:hover {
    box-shadow: 0 8px 12px rgba(255, 255, 255, 0.15);
  }
  
  /* Responsive Image Behavior */
  @media (max-width: 768px) {
    .ProseMirror img[data-float="left"],
    .ProseMirror img[data-float="right"] {
      float: none !important;
      margin: 16px auto !important;
      display: block;
    }
    
    .ProseMirror img[data-alignment="left"],
    .ProseMirror img[data-alignment="right"] {
      margin-left: auto !important;
      margin-right: auto !important;
    }
    
    .ProseMirror .image-figure[style*="float"] {
      float: none !important;
      margin: 16px auto !important;
      display: block;
      text-align: center;
    }
    
    .ProseMirror .image-container {
      text-align: center;
    }
  }
  
  /* Rest of existing styles... */
  .ProseMirror blockquote {
    padding-inline-start: 1em;
    border-inline-start: 3px solid hsl(var(--border));
    margin-inline: 0;
    margin-block: 1em;
    color: hsl(var(--muted-foreground));
  }
  
  .ProseMirror pre {
    background-color: hsl(var(--muted-foreground));
    border-radius: calc(var(--radius) - 2px);
    padding: 0.75em;
    overflow-x: auto;
    margin-block: 1em;
    color: var(--text-foreground);
    background: var(--destructive);
  }
  
  .ProseMirror code {
    background-color: hsl(var(--muted));
    border-radius: calc(var(--radius) - 4px);
    padding-block: 0.2em;
    padding-inline: 0.4em;
    font-size: 0.9em;
    font-family: 'Roboto', 'Noto Sans Thai', sans-serif;
    color: hsl(var(--foreground));
  }
  
  .ProseMirror ul,
  .ProseMirror ol {
    padding-inline-start: 1.5em;
    margin-block: 1em;
  }
  
  .ProseMirror a {
    color: hsl(var(--primary));
    text-decoration: underline;
  }
  
  .ProseMirror a:hover {
    color: hsl(var(--primary) / 0.8);
  }
  
  /* Table Styles - ใช้ CSS variables */
  .ProseMirror .tiptap-table {
    border-collapse: collapse;
    width: 100%;
    border: 1px solid hsl(var(--border));
    margin-block: 1em;
  }
  
  .ProseMirror .tiptap-table td,
  .ProseMirror .tiptap-table th {
    border: 1px solid hsl(var(--border));
    padding: 8px 12px;
    text-align: left;
  }
  
  .ProseMirror .tiptap-table th {
    background-color: hsl(var(--muted));
    font-weight: 600;
    color: hsl(var(--foreground));
  }
  
  .ProseMirror .tiptap-table tr:nth-child(even) {
    background-color: hsl(var(--muted) / 0.3);
  }
  
  /* Highlight styles */
  .ProseMirror mark {
    background-color: hsl(var(--primary) / 0.2);
    padding: 0.1em 0.2em;
    border-radius: calc(var(--radius) - 4px);
  }
  
  /* สำหรับ toolbar แบบ sticky ที่ทำงานกับทั้ง container และ browser scroll */
  .tiptap-toolbar {
    transition:
      box-shadow 0.3s ease,
      position 0.2s ease;
    background-color: hsl(var(--background));
  }
  
  .tiptap-toolbar-sticky {
    animation: toolbar-slide-down 0.3s ease forwards;
    box-shadow: 0 4px 6px -1px hsl(var(--foreground) / 0.1);
  }
  
  /* Animation เมื่อ toolbar เปลี่ยนจาก relative เป็น sticky/fixed */
  @keyframes toolbar-slide-down {
    from {
      transform: translateY(-100%);
      opacity: 0.7;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  /* เพิ่ม space ให้กับ content */
  .ProseMirror > *:first-child {
    margin-block-start: 0;
  }
  
  .ProseMirror > *:last-child {
    margin-block-end: 0;
  }
  
  /* Placeholder styling */
  .ProseMirror .is-editor-empty:first-child::before {
    content: attr(data-placeholder);
    float: left;
    color: hsl(var(--muted-foreground));
    pointer-events: none;
    height: 0;
  }
  
  /* Focus styles */
  .ProseMirror:focus {
    outline: none;
  }
  
  .ProseMirror:focus-visible {
    outline: 2px solid hsl(var(--ring));
    outline-offset: 2px;
  }
  
  /* Loading state */
  .editor-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 200px;
    background-color: hsl(var(--muted) / 0.2);
    border: 1px solid hsl(var(--border));
    border-radius: var(--radius);
  }
  
  .editor-loading .loading-text {
    color: hsl(var(--muted-foreground));
    font-size: 0.875rem;
  }
  
  /* Scroll to top button */
  .editor-scroll-top {
    opacity: 0.8;
    transform: scale(0.9);
    transition:
      opacity 0.2s,
      transform 0.2s;
    background-color: hsl(var(--background));
    border: 1px solid hsl(var(--border));
    box-shadow: 0 4px 6px -1px hsl(var(--foreground) / 0.1);
  }
  
  .editor-scroll-top:hover {
    opacity: 1;
    transform: scale(1);
    background-color: hsl(var(--accent));
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .ProseMirror {
      min-block-size: 120px;
    }
    
    .tiptap-toolbar {
      padding: 0.5rem;
      gap: 0.25rem;
    }
    
    .tiptap-toolbar .button-group {
      flex-wrap: wrap;
    }
  }